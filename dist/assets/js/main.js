!function(n){var e={};function t(c){if(e[c])return e[c].exports;var l=e[c]={i:c,l:!1,exports:{}};return n[c].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var l in n)t.d(c,l,function(e){return n[e]}.bind(null,l));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/modules/Video.js\n//ensure <script src=\"https://player.vimeo.com/api/player.js\"><\/script> is included on page\n\nlet Video = function( id, $ele ){\n  let opts = {\n    id: id,\n    width: window.innerWidth,\n    autoplay: false,\n    controls: false\n  };\n  this.vimeo = new Vimeo.Player( $ele, opts );\n  this.volume = 0;\n  this.vimeo.setVolume( this.volume );\n  this.progress = 0;\n  this.length = 0;\n  this.vimeo.getDuration().then(duration => this.length = duration);  \n  this.fadeLoop = false;\n  this.vimeo.on('ended', ( ) => {\n    console.log('vimeo says ended')\n    this._onEnded();\n  });\n  this.vimeo.on('timeupdate', ( t ) => {\n    this.progress = t.seconds / t.duration;\n    if( typeof this.onProgress === 'function' ){\n      this.onProgress();\n    }\n    if( t.seconds >= t.duration - 2 ){\n      console.log( 'less than 2 seconds to end' );\n      this._onEnded();\n    }\n  });\n}\n\nlet proto = Video.prototype;\n\nproto._onEnded = function(){\n  console.log('Video() - _onEnded()');\n  if( typeof this.onEnded === 'function' ){\n    this.onEnded();\n  }\n}\n\nproto.play = function(){\n  this.vimeo.play();\n}\n\nproto.pause = function(){\n  this.vimeo.pause();\n}\n\nproto.getProgress = function(){\n  return this.progress;\n}\n\nproto._onFadedIn = function(){\n  if( typeof this.onFadedIn === 'function' ){\n    this.onFadedIn();\n  }\n}\n\nproto.fadeIn = function( _time, _callback ){  \n  let time = _time || 100;\n  let callback = _callback || function(){};\n  clearInterval( this.fadeLoop );\n  let change = 1 - this.volume;\n  let step = change / (time / 10);\n  this.fadeLoop = setInterval(() => {\n    this.volume += step;\n    if( this.volume >= 1 ){\n      this.volume = 1; \n      this._onFadedIn();\n      callback();\n      clearInterval( this.fadeLoop );\n    }    \n    this.vimeo.setVolume( this.volume );\n  }, 10 );\n};\n\nproto._onFadedOut = function(){\n  if( typeof this.onFadedOut === 'function' ){\n    this.onFadedOut();\n  }\n}\n\nproto.fadeOut = function( _time, _callback ){  \n  let time = _time || 100;\n  let callback = _callback || function(){};  \n  clearInterval( this.fadeLoop );\n  let change = -this.volume;\n  let step = change / (time / 10);  \n  console.log( 'from', this.volume, ' fadeout: ', change, step );\n  this.fadeLoop = setInterval(() => {\n    this.volume += step;\n    if( this.volume <= 0 ){\n      this.volume = 0; \n      this._onFadedOut();\n      callback();\n      clearInterval( this.fadeLoop );\n    }\n    this.vimeo.setVolume( this.volume );\n  }, 10 );\n};\n\nproto.update = function( fraction ){\n\n}\n/* harmony default export */ var modules_Video = (Video);\n// CONCATENATED MODULE: ./src/modules/Screen.js\n\n\nlet Screen = function( $ele ){\n  this.$ele = $ele;\n  this.$content = $ele.querySelector('.screen--content');\n  this.active = false;\n  this.type = '';\n  if( this.$ele.classList.contains( 'screen__text__credits' ) ){\n      this.type = 'credits';\n  } else if( this.$ele.classList.contains( 'screen__video' ) ){\n    this.type = 'video';    \n    this.video = new modules_Video( this.$content.dataset.vimeo_id, this.$content );\n    this.video.onProgress = () => {\n      this._onProgress();\n    };\n    this.video.onEnded = () => {\n      this.deactivate();\n      this.screenAfter.activate();\n    }\n  } else {\n    this.type = 'text';\n  }\n  this.scrollProgress = 0;\n  this.scrollProgressFrac = 0;\n  this.scrollMax = ( this.type === 'credits' ) ? this.$ele.scrollHeight : this.$ele.offsetHeight/2;  \n  this.scrollMin = ( this.type === 'credits' ) ? this.$ele.offsetHeight * -0.1 : 0;\n}\n\nlet Screen_proto = Screen.prototype;\n\nScreen_proto.linkToOthers = function( before, after ){\n  this.screenBefore = before;\n  this.screenAfter = after;\n}\n\nScreen_proto._onProgress = function(){\n  if( typeof this.onProgress === 'function' && this.active ){\n    this.onProgress();\n  }\n}\n\nScreen_proto.preload = function(){\n  if( this.type === 'video' ){\n    this.video.play();    \n  }\n}\n\nScreen_proto.activate = function(){\n  this.active = true;\n  this.$ele.classList.add( 'active' );\n  this.scrollProgress = 0;\n  this.scrollProgressFrac = 0;\n  if( this.type === 'video' ){\n    this.video.play();\n    this.video.fadeIn(1500);\n  }\n  if( this.type === 'credits' ){\n    this.$content.scrollTop = 0;\n  }\n  this.update();\n}\n\nScreen_proto.deactivate = function(){\n  this.active = false;\n  this.$ele.classList.remove('active');\n  if( this.type === 'video' ){\n    this.video.fadeOut(1500, () => {\n      this.video.pause();\n    });\n  }\n}\n\n\nScreen_proto.scroll = function( delta ){\n  if( this.active ){\n    this.scrollProgress += delta;\n    if( this.scrollProgress < this.scrollMin -10 ){\n      this.scrollProgress = this.scrollMin -10;\n    } else if( this.scrollProgress > this.scrollMax + 10 ){\n      this.scrollProgress = this.scrollMax + 10;\n    }\n    this.scrollProgressFrac = this.scrollProgress/this.scrollMax;\n    if( this.scrollProgressFrac > 1 && this.screenAfter ){\n      this.deactivate()\n      this.screenAfter.activate();\n    } else if( this.scrollProgressFrac < this.scrollMin / this.scrollMax && this.screenBefore ){\n      this.deactivate();\n      this.screenBefore.activate();\n    }\n    if( this.scrollProgressFrac > 0.25 && this.screenAfter.type === 'video' ){\n      this.screenAfter.preload();\n    } \n  }\n}\n\nScreen_proto.resize = function(){\n  this.scrollProgressFrac = this.scrollProgress/this.scrollMax;\n  this.scrollMax = ( this.type === 'credits' ) ? this.$ele.scrollHeight : this.$ele.offsetHeight;\n  this.scrollProgress = this.scrollProgressFrac * this.scrollMax;\n}\n\nScreen_proto.update = function(){\n  if( this.type === 'video' ){\n    this.video.update( this.scrollProgressFrac );\n  }  \n\n  this.$content.style.opacity = (1 - this.scrollProgressFrac);\n}\n\n/* harmony default export */ var modules_Screen = (Screen);\n// CONCATENATED MODULE: ./src/modules/Progress.js\nlet Progress = function( $ele, currentScreen, stageIndex ){\n  this.$ele = $ele;\n  this.$indicator = this.$ele.querySelector('.progress--indicator');\n  this.$stages = this.$ele.querySelectorAll('.progress--stage');\n  this.setCurrent( currentScreen, stageIndex );\n  this.initInteraction();\n  this.hideTimeout = false;\n}\n\nlet Progress_proto = Progress.prototype;\n\nProgress_proto.hide = function( delay ){\n  clearTimeout( this.hideTimeout );\n  if( delay ){\n    this.hideTimeout = setTimeout(() => {\n      this.$ele.classList.add('state__hidden');\n    }, delay );\n  } else {\n    this.$ele.classList.add('state__hidden');\n  }\n}\nProgress_proto.show = function(){\n  clearTimeout( this.hideTimeout );\n  this.$ele.classList.remove('state__hidden');\n}\n\nProgress_proto._onStageSelect = function( index, id ){\n  console.log( index, id );\n  if( typeof this.onStageSelect === 'function' ){\n    this.onStageSelect( index, id );\n  }\n}\n\nProgress_proto.initInteraction = function(){\n  this.$ele.querySelectorAll('a').forEach(( $a, i  ) => {\n    $a.addEventListener('click', () => {\n      let id = $a.href.replace(window.location.origin,'').replace('/', '').replace('#','');\n      this._onStageSelect( i, id );\n    });\n  });\n  \n  document.addEventListener('mousemove', () => {\n    clearTimeout( this.hideTimeout );\n    this.show();\n    if( this.currentScreen.type === 'video' ){\n      this.hide( 1500 );\n    }\n  })\n};\n\nProgress_proto.setCurrent = function( currentScreen, stageIndex ){\n  this.currentScreen = currentScreen;\n  this.$currentStage = this.$stages[ stageIndex ];\n  this.moveIndicator();\n  if( this.currentScreen.type === 'video' ){\n    this.hide( 600 );\n    this.currentScreen.onProgress = () => {\n      this.moveIndicator();\n    }\n  } else {\n    this.show();\n  }\n}\n\nProgress_proto.moveIndicator = function(){\n  let translateX = 0;\n  if( this.currentScreen.type === 'video' ){\n    let progress = this.currentScreen.video.getProgress();\n    let x = this.$currentStage.offsetLeft;\n    let max = this.$currentStage.offsetWidth;\n    translateX = x + (progress * max);    \n  } else {\n    translateX = this.$currentStage.offsetLeft;\n  }\n  this.$indicator.style.transform = 'translateX(' + translateX + 'px)';\n}\n\n/* harmony default export */ var modules_Progress = (Progress);\n// CONCATENATED MODULE: ./src/main.js\n\n\n\nlet screens = [];\ndocument\n  .querySelectorAll('.screen')\n  .forEach(function( $s ){\n    screens.push( new modules_Screen( $s ) );\n  });\n\nfor( let i = 0; i < screens.length; i++ ){\n  let before = i > 0 ? screens[i-1] : false;\n  let after = i < screens.length - 1 ? screens[i+1] : false;  \n  screens[i].linkToOthers( before, after );\n}\n\nwindow.screens = screens;\n\nlet currentScreenIndex = 0;\nlet pScreenIndex = 0;\nlet currentStageIndex = Math.floor( currentScreenIndex / 2 );\nlet currentScreen = screens[currentScreenIndex];\n\nlet progress = new modules_Progress( document.querySelector('.progress--bar'), currentScreen , currentStageIndex );\n\nlet stageSelectTimeout = false;\nprogress.onStageSelect = function( index, id ){\n  if( index !== currentStageIndex ){\n    currentScreen.deactivate();\n    stageSelectTimeout = setTimeout(function(){\n      currentScreenIndex = index * 2;\n      currentStageIndex = index;\n      currentScreen = screens[currentScreenIndex];\n      currentScreen.activate();\n      progress.setCurrent( currentScreen, currentStageIndex );\n    }, 300 );\n  }\n}\n\ncurrentScreen.activate();\n\n\n\nfor( let i = 0; i < screens.length; i++ ){\n  screens[i].update();\n}\n\nlet isScrolling;\nlet scrollBreak = false;\n\n\ndocument.addEventListener('wheel', function( e ){\n  window.clearTimeout( isScrolling );\n  isScrolling = setTimeout(function() {\n\t\tscrollBreak = false;\n\t}, 200 );\n\n  if( !scrollBreak ){\n    currentScreen.scroll( e.deltaY );\n    currentScreen.update();\n  }\n\n  for( let i = 0; i < screens.length; i++ ){\n    if( screens[i].active ){\n      currentScreenIndex = i;\n      currentStageIndex = Math.floor( currentScreenIndex / 2 );\n      currentScreen = screens[i];\n    }\n  }\n\n  if( currentScreenIndex !== pScreenIndex ){\n    progress.setCurrent( currentScreen, currentStageIndex );\n    scrollBreak = true;\n  }\n  \n  pScreenIndex = currentScreenIndex;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);